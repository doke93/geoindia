{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to geoindia","text":"<p>A python package for interactive mapping.</p> <ul> <li>Free software: MIT license</li> <li>Documentation: https://doke93.github.io/geoindia</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>TODO</li> </ul>"},{"location":"#credits","title":"Credits","text":"<p>This package was created with Cookiecutter and the giswqs/pypackage project template.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v001-april-16-2023","title":"v0.0.1 - April 16, 2023","text":"<ul> <li>Created documentation website</li> </ul>"},{"location":"changelog/#v001-april-15-2023","title":"v0.0.1 - April 15, 2023","text":"<ul> <li>Initial release</li> </ul>"},{"location":"contributing/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/doke93/geoindia/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with <code>bug</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with <code>enhancement</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>geoindia could always use more documentation, whether as part of the official geoindia docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/doke93/geoindia/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up geoindia for local development.</p> <ol> <li> <p>Fork the geoindia repo on GitHub.</p> </li> <li> <p>Clone your fork locally:</p> <pre><code>$ git clone git@github.com:your_name_here/geoindia.git\n</code></pre> </li> <li> <p>Install your local copy into a virtualenv. Assuming you have     virtualenvwrapper installed, this is how you set up your fork for     local development:</p> <pre><code>$ mkvirtualenv geoindia\n$ cd geoindia/\n$ python setup.py develop\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>When you're done making changes, check that your changes pass flake8     and the tests, including testing other Python versions with tox:</p> <pre><code>$ flake8 geoindia tests\n$ python setup.py test or pytest\n$ tox\n</code></pre> <p>To get flake8 and tox, just pip install them into your virtualenv.</p> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated.     Put your new functionality into a function with a docstring, and add     the feature to the list in README.rst.</li> <li>The pull request should work for Python 3.5, 3.6, 3.7 and 3.8, and     for PyPy. Check https://github.com/doke93/geoindia/pull_requests and make sure that the tests pass for all     supported Python versions.</li> </ol>"},{"location":"faq/","title":"FAQ","text":""},{"location":"geoindia/","title":"geoindia module","text":"<p>Main module.</p>"},{"location":"geoindia/#geoindia.geoindia.generate_lucky_number","title":"<code>generate_lucky_number(length=1)</code>","text":"<p>Generate a randowm number of a given length</p> <p>Parameters:</p> Name Type Description Default <code>length</code> <code>int</code> <p>The length of the string to generate. Default to 1.</p> <code>1</code> <p>Returns:</p> Type Description <code>str</code> <p>The generated number string</p> Source code in <code>geoindia/geoindia.py</code> <pre><code>def generate_lucky_number(length=1):\n\"\"\"Generate a randowm number of a given length\n\n    Args:\n        length (int, optional): The length of the string to generate. Default to 1.\n\n    Returns:\n        str: The generated number string\n    \"\"\"\n    result_str = ''.join(random.choice(string.digits) for i in range(length))\n    return result_str\n</code></pre>"},{"location":"geoindia/#geoindia.geoindia.generate_random_string","title":"<code>generate_random_string(length=10)</code>","text":"<p>Generate a randowm string of a given length</p> <p>Parameters:</p> Name Type Description Default <code>length</code> <code>int</code> <p>The length of the string to generate. Default to 10</p> <code>10</code> <p>Returns:</p> Type Description <code>str</code> <p>The generated string</p> Source code in <code>geoindia/geoindia.py</code> <pre><code>def generate_random_string(length=10):\n\"\"\"Generate a randowm string of a given length\n\n    Args:\n        length (int, optional): The length of the string to generate. Default to 10\n\n    Returns:\n        str: The generated string\n    \"\"\"    \n\n    characters = string.ascii_uppercase + string.digits + string.ascii_lowercase + string.punctuation\n    rnd = random.SystemRandom()\n    return ''.join(rnd.choice(characters) for i in range(length))\n</code></pre>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#stable-release","title":"Stable release","text":"<p>To install geoindia, run this command in your terminal:</p> <pre><code>pip install geoindia\n</code></pre> <p>This is the preferred method to install geoindia, as it will always install the most recent stable release.</p> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"installation/#from-sources","title":"From sources","text":"<p>The sources for geoindia can be downloaded from the Github repo.</p> <p>You can clone the public repository:</p> <pre><code>git clone git://github.com/doke93/geoindia\n</code></pre>"},{"location":"usage/","title":"Usage","text":"<p>To use geoindia in a project:</p> <pre><code>import geoindia\n</code></pre>"},{"location":"examples/folium/","title":"Folium","text":"In\u00a0[1]: Copied! <pre>import folium\n\nm = folium.Map(location=[45.5236,-122.6750])\n</pre> import folium  m = folium.Map(location=[45.5236,-122.6750]) In\u00a0[2]: Copied! <pre>m\n</pre> m Out[2]: Make this Notebook Trusted to load map: File -&gt; Trust Notebook In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"examples/geoindia_demo/","title":"Geoindia demo","text":"In\u00a0[1]: Copied! <pre>import geoindia\n</pre> import geoindia In\u00a0[2]: Copied! <pre>m  = geoindia.Map(center=[40, -100], zoom=4)\nm.add_search_control(position='topright')\nm.add_draw_control()\nm\n</pre> m  = geoindia.Map(center=[40, -100], zoom=4) m.add_search_control(position='topright') m.add_draw_control() m  Out[2]: In\u00a0[3]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"examples/intro/","title":"Intro","text":"In\u00a0[1]: Copied! <pre>import random\nimport string\n\ndef generate_random_string(length):\n    characters = string.ascii_uppercase + string.digits + string.ascii_lowercase + string.punctuation\n    rnd = random.SystemRandom()\n    return ''.join(rnd.choice(characters) for i in range(length))\n</pre> import random import string  def generate_random_string(length):     characters = string.ascii_uppercase + string.digits + string.ascii_lowercase + string.punctuation     rnd = random.SystemRandom()     return ''.join(rnd.choice(characters) for i in range(length))  In\u00a0[2]: Copied! <pre>random_string = generate_random_string(10)\nprint(random_string)\n</pre> random_string = generate_random_string(10) print(random_string) <pre>RvVASEPR#u\n</pre> In\u00a0[3]: Copied! <pre>import geoindia\n</pre> import geoindia In\u00a0[4]: Copied! <pre>generate_random_string(10)\n</pre> generate_random_string(10) Out[4]: <pre>\"}^'F=E})d{\"</pre> In\u00a0[5]: Copied! <pre>geoindia.generate_lucky_number(5)\n</pre> geoindia.generate_lucky_number(5) Out[5]: <pre>'80465'</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"examples/ipyleaflet/","title":"Ipyleaflet","text":"In\u00a0[1]: Copied! <pre>from ipyleaflet import Map, basemaps, basemap_to_tiles\n\nm = Map(\n    basemap=basemap_to_tiles(basemaps.OpenTopoMap),\n    center=(52.204793, 360.121558),\n    zoom=4\n)\n\nm\n</pre> from ipyleaflet import Map, basemaps, basemap_to_tiles  m = Map(     basemap=basemap_to_tiles(basemaps.OpenTopoMap),     center=(52.204793, 360.121558),     zoom=4 )  m Out[1]: In\u00a0[2]: Copied! <pre>m.clear_layers()\n</pre> m.clear_layers() In\u00a0[\u00a0]: Copied! <pre>\n</pre>"}]}